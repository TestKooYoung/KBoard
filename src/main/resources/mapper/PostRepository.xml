<?xml version="1.0" encoding="UTF-8"?>
<!-- 1. -->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 2. -->
<mapper namespace="com.lec.spring.repository.PostRepository">

<!-- 3. -->
    <insert id="save" flushCache="true"
            parameterType="com.lec.spring.domain.Post"
            useGeneratedKeys="true" keyColumn="id" keyProperty="id">
# auto-increment 기능을 사용할 때는 useGeneratedKeys를 설정
        INSERT INTO t5_post
            (subject, content, user_id)
        values
            (#{subject}, #{content}, #{user.id})
#         값은 프로퍼티
    </insert>

    <update id="incViewCnt" flushCache="true">
        UPDATE t5_post
        SET viewcnt = viewcnt +1
        WHERE id = #{id}
    </update>

    <sql id="SELECT_BASE">
        <!-- 반복해서 사용될 쿼리문은 sql 태그로 정의 하고, include 태그로 가져다 쓸수 있다 -->
        SELECT
            p.id"p_id",
            p.subject"p_subject",
            p.content"p_content",
            p.viewcnt "p_viewcnt",
            p.regdate "p_regdate",
            u.id"u_id",
            u.username"u_username",
            u.name"u_name",
            u.email"u_email",
            u.regdate"u_regdate"
        FROM
            t5_post p, t5_user u
        WHERE
            p.user_id = u.id
    </sql>

    <!--    JOIN 문에서 여러 테이블의 데이터 를 매핑 받기 -->
    <resultMap id="mapUser" type="com.lec.spring.domain.User">
        <result column="u_id" property="id"/>
        <result column="u_username" property="username"/>
        <result column="u_password" property="password"/>
        <result column="u_name" property="name"/>
        <result column="u_email" property="email"/>
        <result column="u_regdate" property="regDate"/>
    </resultMap>

    <resultMap id="mapPost" type="com.lec.spring.domain.Post">
        <result column="p_id" property="id"/>
        <result column="p_subject" property="subject"/>
        <result column="p_content" property="content"/>
        <result column="p_viewcnt" property="viewCnt"/>
        <result column="p_regdate" property="regDate"/>
        <collection property="user" resultMap="mapUser"/>
    </resultMap>

    <select id="findAll" resultMap="mapPost">
        <include refid="SELECT_BASE"/>
        ORDER BY p.id desc
    </select>

    <select id="findById" resultMap="mapPost">
        <include refid="SELECT_BASE"/>
            AND p.id = #{id}
    </select>

    <update id="update" flushCache="true"
            parameterType="com.lec.spring.domain.Post">
#         id 는 메소드 이름.
        update t5_post
        set subject = #{subject}, content = #{content}
        where id = #{id}
    </update>

    <delete id="delete" flushCache="true"
        parameterType="com.lec.spring.domain.Post">
        delete FROM t5_post WHERE id = #{id}
    </delete>

    <!--    페이징 용 쿼리-->
    <select id="selectFromRow" resultMap="mapPost">
        <include refid="SELECT_BASE"/>
        order by p.id desc
        limit #{param1}, #{param2}
    </select>

    <select id="countAll" resultType="int">
        select count(*)
        FROM t5_post;
    </select>

</mapper>


